---
import { generateStoreSlug } from '../utils/slugify';

interface Props {
  store: any;
}

const { store } = Astro.props;

// Generate the store detail page URL
const storeSlug = generateStoreSlug(store.name, store.city, store.province);
const storeUrl = `/stores/${storeSlug}/`;

// Format rating
const rating = parseFloat(store.rating || '0');
const numReviews = parseInt(store.num_reviews || '0');

// Get store image with fallback
const getStoreImage = (photoUrl: string, storeName: string) => {
  if (photoUrl && photoUrl !== '') {
    return photoUrl;
  }
  // Default fallback image
  return '/images/default-bookstore.jpg';
};

const storeImage = getStoreImage(store.photos_url, store.name);
---

<div class="bg-white rounded-xl shadow-md hover:shadow-lg transition-all duration-300 overflow-hidden group">
  <!-- Image Section -->
  <div class="relative h-48 overflow-hidden">
    <img
      src={storeImage}
      alt={`${store.name} storefront`}
      class="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
      loading="lazy"
    />
  </div>

  <!-- Content Section -->
  <div class="p-4">
    <!-- Store Name -->
    <h3 class="text-lg font-semibold text-gray-900 mb-1 line-clamp-2 group-hover:text-blue-600 transition-colors">
      {store.name}
    </h3>

    <!-- Description -->
    {store.description && (
      <p class="text-sm text-gray-600 mb-2 line-clamp-2">
        {store.description}
      </p>
    )}

    <!-- Location -->
    <p class="text-sm text-gray-500 mb-2">
      {store.city}, {store.province}
    </p>

    <!-- Rating -->
    {rating > 0 && (
      <div class="flex items-center gap-1 mb-3">
        <div class="flex items-center">
          {[...Array(5)].map((_, i) => (
            <svg
              class={`w-4 h-4 ${
                i < Math.floor(rating)
                  ? 'text-yellow-400'
                  : 'text-gray-300'
              }`}
              fill="currentColor"
              viewBox="0 0 20 20"
              aria-hidden="true"
            >
              <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z" />
            </svg>
          ))}
        </div>
        <span class="text-sm text-gray-600">
          {rating.toFixed(1)}
        </span>
        {numReviews > 0 && (
          <span class="text-xs text-gray-500">
            ({numReviews} reviews)
          </span>
        )}
      </div>
    )}

    <!-- Action Buttons -->
    <div class="flex flex-wrap gap-2 mb-3">
      <a
        href={storeUrl}
        class="inline-flex items-center px-3 py-1 bg-blue-600 text-white text-sm rounded-lg hover:bg-blue-700 transition-colors"
      >
        View Details
      </a>
      {store.website && (
        <a
          href={store.website}
          target="_blank"
          rel="noopener noreferrer"
          class="inline-flex items-center gap-1 px-3 py-1 bg-gray-100 text-gray-700 text-sm rounded-lg hover:bg-gray-200 transition-colors"
        >
          <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
          </svg>
          Website
        </a>
      )}
      {store.phone && (
        <a
          href={`tel:${store.phone}`}
          class="inline-flex items-center gap-1 px-3 py-1 bg-green-100 text-green-700 text-sm rounded-lg hover:bg-green-200 transition-colors"
        >
          <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z" />
          </svg>
          Call
        </a>
      )}
    </div>
  </div>
</div>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style> 