---
import type { GetStaticPaths } from 'astro';
import Layout from '../../layouts/Layout.astro';
import StaticStoreCard from '../../components/StaticStoreCard.astro';
import { getBookstoreData } from '../../utils/dataLoader';
import { 
  extractProvinces, 
  getStoresByProvince, 
  findProvinceBySlug, 
  createProvinceSlug,
  type ProvinceInfo,
  type CityInfo
} from '../../utils/geographic';

export const getStaticPaths: GetStaticPaths = async () => {
  const bookstores = await getBookstoreData();
  const provinces = extractProvinces(bookstores);

  return provinces.map((province: ProvinceInfo) => ({
    params: { 
      province: createProvinceSlug(province.name)
    },
    props: { 
      province,
      bookstores: getStoresByProvince(bookstores, province.name)
    }
  }));
};

interface Props {
  province: ProvinceInfo;
  bookstores: any[];
}

const { province, bookstores } = Astro.props;
const { params } = Astro;

// Meta information
const pageTitle = `Bookstores in ${province.name} - BookDir Canada`;
const pageDescription = `Discover ${province.totalStores} used and rare bookstores across ${province.cities.length} cities in ${province.name}. Find local book treasures near you.`;
const canonicalUrl = `${Astro.site}${params.province}/`;

// Sort cities by store count for better display
const topCities = province.cities.slice(0, 10);
const otherCities = province.cities.slice(10);

let showOtherCities = false;
---

<Layout 
  title={pageTitle}
  description={pageDescription}
  canonical={canonicalUrl}
>
  <!-- Structured Data for Province -->
  <script type="application/ld+json" set:html={JSON.stringify({
    "@context": "https://schema.org",
    "@type": "CollectionPage",
    "name": `Bookstores in ${province.name}`,
    "description": pageDescription,
    "url": canonicalUrl,
    "about": {
      "@type": "Place",
      "name": province.name,
      "addressRegion": province.code
    },
    "numberOfItems": province.totalStores,
    "mainEntity": {
      "@type": "ItemList",
      "numberOfItems": province.totalStores,
      "itemListElement": bookstores.slice(0, 5).map((store, index) => ({
        "@type": "LocalBusiness",
        "position": index + 1,
        "name": store.name,
        "address": {
          "@type": "PostalAddress",
          "streetAddress": store.address,
          "addressLocality": store.city,
          "addressRegion": store.province,
          "postalCode": store.zip
        }
      }))
    }
  })} />

  <!-- Breadcrumb Structured Data -->
  <script type="application/ld+json" set:html={JSON.stringify({
    "@context": "https://schema.org",
    "@type": "BreadcrumbList",
    "itemListElement": [
      {
        "@type": "ListItem",
        "position": 1,
        "name": "Home",
        "item": Astro.site
      },
      {
        "@type": "ListItem",
        "position": 2,
        "name": "Browse Stores",
        "item": `${Astro.site}stores/`
      },
      {
        "@type": "ListItem",
        "position": 3,
        "name": province.name,
        "item": canonicalUrl
      }
    ]
  })} />

  <!-- Province Hero Section (Homepage Style) -->
  <header class="bg-gradient-to-r from-blue-600 to-indigo-700 text-white" role="banner">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16 sm:py-24">
      <div class="text-center">
        <!-- Logo/Brand -->
        <div class="flex justify-center items-center mb-6">
          <div class="bg-white bg-opacity-20 backdrop-blur-sm rounded-full p-4">
            <svg class="w-12 h-12 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.746 0 3.332.477 4.5 1.253v13C19.832 18.477 18.246 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"></path>
            </svg>
          </div>
        </div>
        <h1 class="text-4xl sm:text-5xl lg:text-6xl font-bold mb-6 tracking-tight">
          Discover {province.name} <span class="block text-yellow-300">Used Bookstores</span>
        </h1>
        <p class="text-xl sm:text-2xl text-blue-100 max-w-3xl mx-auto mb-8 leading-relaxed">
          Explore {province.totalStores} used bookstores across {province.cities.length} cities in {province.name}. Find your next read and support local shops.
        </p>
        <!-- Quick Stats -->
        <div class="flex flex-wrap justify-center gap-6 sm:gap-8 mb-10">
          <div class="bg-white bg-opacity-20 backdrop-blur-sm rounded-lg px-6 py-4">
            <div class="text-2xl sm:text-3xl font-bold text-yellow-300">{province.totalStores}</div>
            <div class="text-sm text-blue-100">Bookstores</div>
          </div>
          <div class="bg-white bg-opacity-20 backdrop-blur-sm rounded-lg px-6 py-4">
            <div class="text-2xl sm:text-3xl font-bold text-yellow-300">{province.cities.length}</div>
            <div class="text-sm text-blue-100">Cities</div>
          </div>
          <div class="bg-white bg-opacity-20 backdrop-blur-sm rounded-lg px-6 py-4">
            <div class="text-2xl sm:text-3xl font-bold text-yellow-300">{topCities[0]?.name || 'â€”'}</div>
            <div class="text-sm text-blue-100">Top City</div>
          </div>
        </div>
        <!-- Action Button -->
        <div class="flex flex-col sm:flex-row gap-4 justify-center items-center">
          <a 
            href="/stores" 
            class="inline-flex items-center px-8 py-3 bg-yellow-400 hover:bg-yellow-300 text-gray-900 font-semibold rounded-full transition-colors shadow-lg focus:outline-none focus:ring-2 focus:ring-yellow-300 focus:ring-offset-2 focus:ring-offset-blue-600"
          >
            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 10h16M4 14h16M4 18h16"></path>
            </svg>
            Browse All Stores
          </a>
        </div>
      </div>
    </div>
    <!-- Decorative wave -->
    <div class="relative">
      <svg class="absolute bottom-0 w-full h-6 text-gray-50" fill="currentColor" viewBox="0 0 1000 100" preserveAspectRatio="none">
        <path d="M0,100 C150,0 350,0 500,50 C650,100 850,100 1000,0 L1000,100 Z"></path>
      </svg>
    </div>
  </header>

  <!-- Breadcrumb Navigation and Main Content -->
  <main class="container mx-auto px-4 py-8">
    <!-- Breadcrumb Navigation -->
    <nav class="flex mb-6 text-sm text-gray-600" aria-label="Breadcrumb">
      <ol class="flex items-center space-x-2">
        <li><a href="/" class="hover:text-blue-600">Home</a></li>
        <li class="flex items-center">
          <span class="mx-2">/</span>
          <a href="/stores/" class="hover:text-blue-600">Browse Stores</a>
        </li>
        <li class="flex items-center">
          <span class="mx-2">/</span>
          <span class="font-medium text-gray-900">{province.name}</span>
        </li>
      </ol>
    </nav>

    <!-- Browse by City -->
    <section class="mb-12">
      <h2 class="text-2xl font-bold text-gray-900 mb-6">Browse by City</h2>
      
      {topCities.length > 0 && (
        <div class="mb-8">
          <h3 class="text-xl font-semibold text-gray-800 mb-4">Major Cities</h3>
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
            {topCities.map((city: CityInfo) => (
              <a 
                href={`/${params.province}/${city.slug}/`}
                class="block p-4 bg-white border border-gray-200 rounded-lg hover:border-blue-300 hover:shadow-md transition-all duration-200"
              >
                <div class="flex justify-between items-center">
                  <h4 class="text-lg font-medium text-gray-900">{city.name}</h4>
                  <span class="text-sm font-medium text-blue-600 bg-blue-100 px-2 py-1 rounded">
                    {city.storeCount} stores
                  </span>
                </div>
              </a>
            ))}
          </div>
        </div>
      )}

      {otherCities.length > 0 && (
        <div>
          <h3 class="text-xl font-semibold text-gray-800 mb-4">Other Cities</h3>
          <button
            id="toggle-other-cities"
            type="button"
            class="mb-4 px-4 py-2 bg-blue-100 text-blue-700 rounded hover:bg-blue-200 transition-colors font-medium focus:outline-none focus:ring-2 focus:ring-blue-400"
            aria-expanded="false"
            aria-controls="other-cities-list"
          >
            Show Other Cities
          </button>
          <div id="other-cities-list" class="hidden grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-3">
            {otherCities.map((city: CityInfo) => (
              <a 
                href={`/${params.province}/${city.slug}/`}
                class="block p-3 bg-gray-50 border border-gray-200 rounded hover:border-blue-300 hover:bg-blue-50 transition-all duration-200"
              >
                <div class="flex justify-between items-center">
                  <span class="text-gray-900">{city.name}</span>
                  <span class="text-xs text-gray-600">{city.storeCount}</span>
                </div>
              </a>
            ))}
          </div>
          <script>
            const btn = document.getElementById('toggle-other-cities');
            const list = document.getElementById('other-cities-list');
            if (btn && list) {
              btn.addEventListener('click', () => {
                const isOpen = list.classList.toggle('hidden') === false;
                btn.setAttribute('aria-expanded', isOpen);
                btn.textContent = isOpen ? 'Hide Other Cities' : 'Show Other Cities';
              });
            }
          </script>
        </div>
      )}
    </section>

    <!-- Featured Stores -->
    <section class="mb-12">
      <div class="flex items-center justify-between mb-6">
        <h2 class="text-2xl font-bold text-gray-900">Featured Stores in {province.name}</h2>
        <a 
          href={`/stores/`}
          class="inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
        >
          <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 10h16M4 14h16M4 18h16"></path>
          </svg>
          Browse All Stores
        </a>
      </div>

      {bookstores.length > 0 ? (
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
          {bookstores.slice(0, 9).map((store) => (
            <StaticStoreCard store={store} />
          ))}
        </div>
      ) : (
        <div class="text-center py-12">
          <div class="text-gray-400 mb-4">
            <svg class="w-16 h-16 mx-auto" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"/>
            </svg>
          </div>
          <h3 class="text-lg font-medium text-gray-900 mb-2">No stores found</h3>
          <p class="text-gray-600">We don't have any bookstores listed for {province.name} yet.</p>
        </div>
      )}
    </section>

    {bookstores.length > 9 && (
      <div class="text-center">
        <a 
          href="/stores/"
          class="inline-flex items-center px-6 py-3 bg-gray-100 text-gray-700 rounded-lg hover:bg-gray-200 transition-colors"
        >
          View All {province.totalStores} Stores in {province.name}
          <svg class="w-4 h-4 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"/>
          </svg>
        </a>
      </div>
    )}

    <!-- SEO Content -->
    <section class="mt-16 prose prose-gray max-w-none">
      <h2>Discover Bookstores in {province.name}</h2>
      <p>
        {province.name} is home to a vibrant community of {province.totalStores} independent bookstores 
        spread across {province.cities.length} cities and towns. Whether you're searching for rare first editions, 
        vintage paperbacks, or unique local publications, the bookstores of {province.name} offer an incredible 
        diversity of literary treasures.
      </p>
      <p>
        From the bustling book scenes in major cities like {topCities.slice(0, 3).map(city => city.name).join(', ')} 
        to hidden gems in smaller communities, each bookstore in {province.name} has its own character and specialty. 
        Many of these establishments have been serving book lovers for decades, building relationships with their 
        communities and curating collections that reflect the unique culture and interests of their regions.
      </p>
    </section>
  </main>
</Layout>

<style>
  .prose h2 {
    @apply text-xl font-bold text-gray-900 mt-8 mb-4;
  }
  
  .prose p {
    @apply text-gray-600 mb-4 leading-relaxed;
  }
</style> 